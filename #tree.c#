/*

Tree will take care of the root node and work with memory allocation and freeing it

 */


Node* node_construct(Good *pWare) {
  Node *pNode = malloc(sizeof(struct Node));
  pNode->pGood = pWare;
  pNode->nodeLeft = NULL;
  pNode->nodeRight = NULL;
  //Memmory checking here then done, if not malloc is a problem.
  return pNode;
}

// Freeing the memory from the node
void node_destruct(Node *pNode) {
  free(pNode);
}

void add_nood(Node *pNode)
{
  if (rootNode == NULL) {
    rootNode = pNode;
  }

  else {
    
  }
  
}

void tree_search() {
  
}
